[{"/home/sadiq/Desktop/QuizApplication/src/index.js":"1","/home/sadiq/Desktop/QuizApplication/src/reportWebVitals.js":"2","/home/sadiq/Desktop/QuizApplication/src/App.js":"3","/home/sadiq/Desktop/QuizApplication/src/store/index.js":"4","/home/sadiq/Desktop/QuizApplication/src/constants/apikey.js":"5","/home/sadiq/Desktop/QuizApplication/src/actions/userActions.js":"6","/home/sadiq/Desktop/QuizApplication/src/components/loading/index.js":"7","/home/sadiq/Desktop/QuizApplication/src/reducers/index.js":"8","/home/sadiq/Desktop/QuizApplication/src/constants/action-types.js":"9","/home/sadiq/Desktop/QuizApplication/src/reducers/userReducer.js":"10","/home/sadiq/Desktop/QuizApplication/src/components/main/main.js":"11","/home/sadiq/Desktop/QuizApplication/src/components/register/register.js":"12","/home/sadiq/Desktop/QuizApplication/src/components/answers/answer.js":"13","/home/sadiq/Desktop/QuizApplication/src/components/input/index.js":"14","/home/sadiq/Desktop/QuizApplication/src/components/result/index.js":"15","/home/sadiq/Desktop/QuizApplication/src/constants/dummyData.js":"16","/home/sadiq/Desktop/QuizApplication/src/components/countdownwrapper/index.js":"17"},{"size":620,"mtime":1658945603708,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1658945603712,"results":"20","hashOfConfig":"19"},{"size":3135,"mtime":1658945603652,"results":"21","hashOfConfig":"19"},{"size":332,"mtime":1658945603712,"results":"22","hashOfConfig":"19"},{"size":482,"mtime":1658945603708,"results":"23","hashOfConfig":"19"},{"size":8058,"mtime":1658945603652,"results":"24","hashOfConfig":"19"},{"size":1771,"mtime":1658945603708,"results":"25","hashOfConfig":"19"},{"size":181,"mtime":1658945603712,"results":"26","hashOfConfig":"19"},{"size":379,"mtime":1658945603708,"results":"27","hashOfConfig":"19"},{"size":1311,"mtime":1658945603712,"results":"28","hashOfConfig":"19"},{"size":2950,"mtime":1658945603708,"results":"29","hashOfConfig":"19"},{"size":3209,"mtime":1658945603708,"results":"30","hashOfConfig":"19"},{"size":9398,"mtime":1658951544989,"results":"31","hashOfConfig":"19"},{"size":6965,"mtime":1658945603708,"results":"32","hashOfConfig":"19"},{"size":3888,"mtime":1658945603708,"results":"33","hashOfConfig":"19"},{"size":34224,"mtime":1658945603708,"results":"34","hashOfConfig":"19"},{"size":594,"mtime":1658945603708,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"obstoh",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},"/home/sadiq/Desktop/QuizApplication/src/index.js",[],["79","80"],"/home/sadiq/Desktop/QuizApplication/src/reportWebVitals.js",[],"/home/sadiq/Desktop/QuizApplication/src/App.js",[],"/home/sadiq/Desktop/QuizApplication/src/store/index.js",[],"/home/sadiq/Desktop/QuizApplication/src/constants/apikey.js",[],"/home/sadiq/Desktop/QuizApplication/src/actions/userActions.js",["81"],"import {\n  LOGIN_SUCCESS,\n  GET_APP_STATE,\n  LOGIN_FAILED,\n  START_QUIZ,\n  USER_RESULT,\n  USER_RESULT_FAILED,\n  SHOW_ANSWER,\n  LOGOUT,\n} from \"../constants/action-types\";\nimport firebase from \"firebase\";\n\nexport const getUserData = value => {\n  return dispatch => {\n    firebase\n      .database()\n      .ref(\"users\")\n      .orderByChild(\"id\")\n      .equalTo(value)\n      .once(\"value\")\n      .then(snapshot => {\n        if (snapshot.exists()) {\n          snapshot.forEach(function (data) {\n            console.log(data.child(\"login\").val(), \"Error: passed snapsot\");\n\n            if (\n              data.child(\"login\").val() &&\n              !localStorage.getItem(\"id\") &&\n              data\n                .child(\"role\")\n                .val()\n                .toLowerCase() == \"user\"\n            ) {\n              console.log(\"Error: already login failed\");\n              dispatch({\n                type: LOGIN_FAILED,\n                payload: \"User is already login to another device\"\n              });\n            } else {\n              console.log(\"login sucess\", data.val());\n              data.ref.child(\"login\").set(true);\n              localStorage.setItem(\"id\", data.child(\"id\").val());\n              dispatch({ type: LOGIN_SUCCESS, payload: data.val() });\n            }\n          });\n        } else {\n          console.log(\"Error: failed\");\n          dispatch({ type: LOGIN_FAILED, payload: \"Invalid User key\" });\n        }\n      });\n  };\n};\n\nexport const getAppState = () => {\n  return dispatch => {\n    firebase\n      .database()\n      .ref(\"appState\")\n      .on(\"value\", snapshot => {\n        if (snapshot.exists()) {\n          snapshot.forEach(function (data) {\n            console.log(data.val(), \"awssssawssssawssss\");\n            dispatch({ type: GET_APP_STATE, payload: data.val() });\n          });\n        } else {\n          console.log(\"asdasxzczxc show toast invalid ID\");\n        }\n      });\n  };\n};\n\nexport const getLoginState = () => {\n  return dispatch => {\n    firebase\n      .database()\n      .ref(\"loginState\")\n      .on(\"value\", snapshot => {\n        if (snapshot.exists()) {\n          snapshot.forEach(function (data) {\n            const dataValue = data.val();\n            if (dataValue.state) {\n              dispatch({ type: START_QUIZ, payload: \"\" });\n            }\n          });\n        } else {\n          console.log(\"abcdasad\");\n        }\n      });\n  };\n};\n\nexport const startQuiz = () => {\n  console.log(START_QUIZ, \"START_QUIZSTART_QUIZ\");\n  return dispatch => {\n    firebase\n      .database()\n      .ref(\"loginState\")\n      .orderByChild(\"state\")\n      .once(\"value\", snapshot => {\n        snapshot.forEach(function (data) {\n          data.ref.child(\"state\").set(true);\n        });\n      });\n  };\n};\n\nexport const getUserResult = value => {\n  return dispatch => {\n    firebase\n      .database()\n      .ref(\"userResults\")\n      .orderByChild(\"id\")\n      .equalTo(value)\n      .on(\"value\", snapshot => {\n        if (snapshot.exists()) {\n          console.log(\"Error: passed\");\n          snapshot.forEach(function (data) {\n            console.log(data.val(), \"user ersuultss\");\n            dispatch({ type: USER_RESULT, payload: data.val() });\n          });\n        } else {\n          console.log(\"Error: failed\");\n          dispatch({ type: USER_RESULT_FAILED, payload: \"\" });\n        }\n      });\n  };\n};\n\nexport const storeAnswer = (obj, value) => {\n  console.log(obj, \"poo\", value);\n  return dispatch => {\n    firebase\n      .database()\n      .ref(\"userResults\")\n      .orderByChild(\"id\")\n      .equalTo(value)\n      .once(\"value\")\n      .then(snapshot => {\n        if (snapshot.exists()) {\n          console.log(\"Error: passed\");\n          snapshot.forEach(function (data) {\n            console.log(\"Error: passed\", data.val());\n            if (obj.score && obj.totalCorrectAnswers) {\n              data.ref.child(\"score\").set(obj.score);\n              data.ref.child(\"totalCorrectAnswers\").set(obj.totalCorrectAnswers);\n              data.ref.child(\"rank\").set(obj.rank);\n            } else {\n              data.ref.child(\"rank\").set(obj.rank);\n            }\n          });\n        } else {\n          console.log(\"Error: failed\");\n          dispatch({ type: USER_RESULT_FAILED, payload: \"\" });\n        }\n      });\n  };\n};\n\nexport const configureUserResults = (obj, value) => {\n  console.log(obj, \"poo\", value);\n  return dispatch => {\n    firebase\n      .database()\n      .ref(\"userResults\")\n      .orderByChild(\"id\")\n      .equalTo(value)\n      .once(\"value\")\n      .then(snapshot => {\n        if (snapshot.exists()) {\n          console.log(\"Error: passed\");\n          snapshot.forEach(function (data) {\n            console.log(\"Error: passed\", data.val());\n            data.ref.child(\"score\").set(obj.score);\n            data.ref.child(\"totalCorrectAnswers\").set(obj.totalCorrectAnswers);\n            data.ref.child(\"rank\").set(obj.rank);\n          });\n        } else {\n          console.log(\"Error: failed\");\n        }\n      });\n  };\n};\n\nexport const configureUser = (value) => {\n  return dispatch => {\n    firebase\n      .database()\n      .ref(\"users\")\n      .orderByChild(\"id\")\n      .equalTo(value)\n      .once(\"value\")\n      .then(snapshot => {\n        if (snapshot.exists()) {\n          console.log(\"Error: passed\");\n          snapshot.forEach(function (data) {\n            console.log(\"Error: passed\", data.val());\n            data.ref.child(\"login\").set(false);\n          });\n        } else {\n          console.log(\"Error: failed\");\n          dispatch({ type: USER_RESULT_FAILED, payload: \"\" });\n        }\n      });\n  };\n};\n\nexport const configureAppState = () => {\n  return dispatch => {\n    firebase\n      .database()\n      .ref(\"appState\")\n      .once(\"value\")\n      .then(snapshot => {\n        if (snapshot.exists()) {\n          console.log(\"Error: passed\");\n          snapshot.forEach(function (data) {\n            console.log(\"Error: passed\", data.val());\n            data.ref.child(\"questionStatus\").set(true);\n            data.ref.child(\"showResult\").set(false);\n            data.ref.child(\"state\").set(0);\n          });\n        } else {\n          console.log(\"Error: failed\");\n          dispatch({ type: USER_RESULT_FAILED, payload: \"\" });\n        }\n      });\n  };\n};\n\nexport const changeLoginState = () => {\n  console.log(START_QUIZ, \"START_QUIZSTART_QUIZ\");\n  return dispatch => {\n    firebase\n      .database()\n      .ref(\"loginState\")\n      .orderByChild(\"state\")\n      .once(\"value\", snapshot => {\n        snapshot.forEach(function (data) {\n          data.ref.child(\"state\").set(false);\n        });\n      });\n  };\n};\n\nexport const getShowAnswerState = () => {\n  return dispatch => {\n    firebase\n      .database()\n      .ref(\"answerState\")\n      .on(\"value\", snapshot => {\n        if (snapshot.exists()) {\n          snapshot.forEach(function (data) {\n            console.log(data.val(), \"awssssawssssawssss\");\n            dispatch({ type: SHOW_ANSWER, payload: data.val() });\n          });\n        }\n      });\n  };\n};\n\nexport const userLogout = (id) => {\n  console.log('asdasd',id)\n  return dispatch => {\n    firebase\n      .database()\n      .ref(\"users\")\n      .orderByChild(\"id\")\n      .equalTo(id)\n      .once(\"value\")\n      .then(snapshot => {\n        if (snapshot.exists()) {\n          snapshot.forEach(function (data) {\n            console.log(data.child(\"login\").val(), \"Error: passed snapsot\");\n            data.ref.child(\"login\").set(false);\n            dispatch({ type: LOGOUT, payload: '' });\n            localStorage.clear();\n          });\n        }\n      }); \n  }\n  /* return dispatch => {\n    firebase\n      .database()\n      .ref(\"users\")\n      .orderByChild(\"id\")\n      .equalTo(id)\n      .once(\"value\")\n      .then(snapshot => {\n        if (snapshot.exists()) {\n          snapshot.forEach(function (data) {\n            console.log(data.child(\"login\").val(), \"Error: passed snapsot\");\n            data.ref.child(\"login\").set(false);\n            dispatch({ type: LOGOUT, payload: '' });\n            localStorage.clear();\n            \n          });\n        }\n      });\n  }; */\n}","/home/sadiq/Desktop/QuizApplication/src/components/loading/index.js",["82"],"import React, { useEffect, useState } from \"react\";\nimport \"./index.css\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Main from \"../main/main\";\nimport * as Actions from \"../../actions/userActions\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst Loading = ({ isLoggedIn, actions, user, appState, userResult, showAnswer }) => {\n  const [Loadingg, isLoadingg] = useState(false);\n\n  useEffect(() => {\n    actions.getAppState();\n    if (localStorage.getItem(\"id\")) {\n      actions.getLoginState();\n      actions.getShowAnswerState();\n      actions.getUserResult(localStorage.getItem(\"id\"));\n      actions.getUserData(localStorage.getItem(\"id\"));\n    }\n    setTimeout(function() {\n      isLoadingg(true);\n    }, 2000);\n  }, []);\n  return (\n    <div>\n      {!Loadingg ? (\n        <div className=\"progress_bar\" align=\"center\">\n          <CircularProgress\n            style={{ color: \"#074a6e\" }}\n            className=\"progress_barColor\"\n            color=\"primary\"\n          />\n        </div>\n      ) : (\n        <div className=\"progress_bar\" align=\"center\">\n          <Main\n            userResult={userResult}\n            appState={appState}\n            showAnswer={showAnswer}\n            user={user}\n            isLoggedIn={isLoggedIn}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = props => ({\n  isLoggedIn: props.userReducer.isLoggedIn,\n  user: props.userReducer.user,\n  userResult: props.userReducer.userResult,\n  appState: props.userReducer.appState,\n  showAnswer:props.userReducer.showAnswer\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(Actions, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Loading);\n","/home/sadiq/Desktop/QuizApplication/src/reducers/index.js",[],"/home/sadiq/Desktop/QuizApplication/src/constants/action-types.js",[],"/home/sadiq/Desktop/QuizApplication/src/reducers/userReducer.js",[],"/home/sadiq/Desktop/QuizApplication/src/components/main/main.js",["83","84","85","86"],"import React, { useState, useEffect } from \"react\";\nimport \"./main.css\";\nimport Answers from \"../answers/answer\";\nimport CustomizedInputs from \"../input/index\";\nimport Register from \"../register/register\";\nimport Result from \"../result/index\";\n\nconst Main = ({ isLoggedIn, user, appState, userResult, showAnswer, error }) => {\n  const [rank, setRank] = useState(0);\n\n  const result = data => {\n    data.filter((e, i) => {\n      if (e.id == user.id) {\n        setRank(i + 1);\n        return i;\n      }\n    });\n  };\n  const getCategory = () => {\n    if (appState.state < 10) {\n      return \"General Knowledge\";\n    } else if (appState.state < 20) {\n      return \"Islamic\";\n    } else if (appState.state < 30) {\n      return \"IQ\";\n    } else if (appState.state < 40) {\n      return \"Nawait\";\n    }\n  };\n  return (\n    <div>\n      {!isLoggedIn ? (\n        <CustomizedInputs />\n      ) : appState.state < 40 ? (\n        <div>\n          <div className=\"main_container\">\n            <span className=\"main_username\">\n            {user.role === \"user\" && user.name + \" \" }\n              <span align=\"left\" className=\"main_username_result\">\n                <br />{user.role === \"admin\" ? 'Admin' :`(${userResult.name})`}\n              </span>\n            </span>\n            <span className=\"main_category\">{getCategory()}</span>\n            <div className=\"main_results_container\">\n            {user.role === \"user\" &&\n            <>\n              <span align=\"left\" className=\"main_score\">\n                Score: {userResult.score}\n              </span>\n\n              <span align=\"left\" className=\"main_rank\">\n                Rank: {rank}\n          </span>\n          </> \n          }\n            </div>\n          </div>\n\n          <div className=\"quiz_component\">\n            <div className=\"answers\">\n              <Answers\n                appState={appState}\n                isAdmin={user.role === \"admin\" ? true : false}\n                user={user}\n                showAnswer={showAnswer}\n                userResult={userResult}\n              />\n            </div>\n            <div className=\"result\">\n              <Result\n                limit={15}\n                result={result}\n                appState={appState}\n                isAdmin={user.role === \"admin\" ? true : false}\n              />\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"result_final\">\n          <div style={{ padding: \"10px\" }} className=\"main_results_container\">\n            <span align=\"right\" className=\"main_score\">\n              Score: {userResult.score}\n            </span>\n\n            <span align=\"right\" className=\"main_rank\">\n              Rank: {rank}\n            </span>\n          </div>\n          <Result\n            limit={50}\n            result={result}\n            appState={appState}\n            isAdmin={user.role === \"admin\" ? true : false}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Main;\n","/home/sadiq/Desktop/QuizApplication/src/components/register/register.js",["87","88"],"import React, { useState, useEffect } from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./register.css\";\nimport firebase from \"firebase\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nconst useStylesReddit = makeStyles(theme => ({\n  root: {\n    border: \"1px solid #e2e2e1\",\n    overflow: \"hidden\",\n    borderRadius: 4,\n    backgroundColor: \"#fcfcfb\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    \"&:hover\": {\n      backgroundColor: \"#fff\"\n    },\n    \"&$focused\": {\n      backgroundColor: \"#fff\",\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\n      borderColor: theme.palette.primary.main\n    }\n  },\n  focused: {}\n}));\n\nfunction RedditTextField(props) {\n  const classes = useStylesReddit();\n\n  return (\n    <TextField InputProps={{ classes, disableUnderline: true }} {...props} />\n  );\n}\n\nconst Register = ({ isLoggedIn }) => {\n  const [user, setUser] = useState({\n    name: \"\",\n    familyName: \"\",\n    id: \"\",\n    role: \"admin\"\n  });\n  const handleSubmit = () => {\n    console.log(user, \"userss\");\n    let userRef = firebase.database().ref(\"users\");\n    let newUserRef = userRef.push();\n    newUserRef\n      .set(user)\n      .then(resp => {\n        console.log(resp);\n        const result = {\n          id: user.id,\n          name: user.name + \" \" + user.familyName,\n          score: 0,\n          totalCorrectAnswers: 0,\n          rank: 0\n        };\n        let userResultRef = firebase.database().ref(\"userResults\");\n        let userResults = userResultRef.push();\n        userResults\n          .set(result)\n          .then(resp => {\n            console.log(resp);\n          })\n          .catch(err => {\n            console.log(err);\n          });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  const handleChange = (val, field) => {\n    setUser({\n      ...user,\n      [field]: val\n    });\n  };\n\n  return (\n    <div className=\"input_container\" align=\"center\">\n      <RedditTextField\n        label=\"Name\"\n        defaultValue={user.name}\n        onChange={e => handleChange(e.target.value, \"name\")}\n        variant=\"filled\"\n        id=\"reddit-input\"\n      />\n      <RedditTextField\n        label=\"Family Name\"\n        defaultValue={user.familyName}\n        onChange={e => handleChange(e.target.value, \"familyName\")}\n        variant=\"filled\"\n        id=\"reddit-input\"\n      />\n\n      <RedditTextField\n        label=\"ID\"\n        defaultValue={user.id}\n        onChange={e => handleChange(e.target.value, \"id\")}\n        variant=\"filled\"\n        id=\"reddit-input\"\n      />\n\n      <Button\n        onClick={handleSubmit}\n        variant=\"contained\"\n        className=\"submitButton\"\n        disabled={!user.name || !user.id || !user.familyName}\n      >\n        submit\n      </Button>\n    </div>\n  );\n};\n\nconst mapStateToProps = props => ({\n  isLoggedIn: props.userReducer.isLoggedIn\n});\n\nconst mapDispatchToProps = dispatch => ({\n  //actions: bindActionCreators(Actions, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\n","/home/sadiq/Desktop/QuizApplication/src/components/answers/answer.js",["89","90","91","92","93","94"],"/home/sadiq/Desktop/QuizApplication/src/components/input/index.js",["95","96","97","98"],"import React, { useState, useEffect } from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./index.css\";\nimport firebase from \"firebase\";\nimport * as Actions from \"../../actions/userActions\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nconst useStylesReddit = makeStyles(theme => ({\n  root: {\n    border: \"1px solid #e2e2e1\",\n    overflow: \"hidden\",\n    borderRadius: 4,\n    backgroundColor: \"#fcfcfb\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    \"&:hover\": {\n      backgroundColor: \"#fff\"\n    },\n    \"&$focused\": {\n      backgroundColor: \"#fff\",\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\n      borderColor: theme.palette.primary.main\n    }\n  },\n  focused: {}\n}));\n\nfunction RedditTextField(props) {\n  const classes = useStylesReddit();\n\n  return (\n    <TextField InputProps={{ classes, disableUnderline: true }} {...props} />\n  );\n}\n\nconst CustomizedInputs = ({\n  actions,\n  error,\n  loginSuccess,\n  user,\n  isLoggedIn,\n  errorMessage\n}) => {\n  const [value, setValue] = useState(\"\");\n  const [errorValue, setErrorValue] = useState(\"Please Enter Value\");\n  const [errors, isError] = useState(false);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    if (loginSuccess) {\n      actions.getLoginState();\n      actions.getUserResult(localStorage.getItem(\"id\"));\n    }\n  }, [user]);\n\n  useEffect(() => {\n    isError(error);\n  }, [error]);\n  /* useEffect(() => {\n    let datas = [];\n    firebase\n      .database()\n      .ref(\"users\")\n      .orderByChild(\"id\")\n      .once(\"value\", snapshot => {\n        snapshot.forEach(function(data) {\n          datas.push(data.val());\n        });\n        datas.map(d => {\n          console.log(d.id,\"asdas\")\n          actions.configureUser(d.id);\n        })\n      });\n    let userResults = [];\n    firebase\n      .database()\n      .ref(\"userResults\")\n      .once(\"value\", snapshot => {\n        snapshot.forEach(function(data) {\n          userResults.push(data.val());\n        });\n        const obj = {\n          rank: -1,\n          score: 0,\n          totalCorrectAnswers: 0\n        };\n        userResults.map(d => {\n          actions.configureUserResults(obj, d.id);\n        })\n        console.log(userResults,\"Asdasd\");\n      });\n      let appstate = [];\n      firebase\n      .database()\n      .ref(\"appState\")\n      .once(\"value\", snapshot => {\n        snapshot.forEach(function(data) {\n          appstate.push(data.val());\n        });\n        const obj = {\n          questionStatus: true,\n          showResult: false,\n          state: 0\n        };\n        appstate.map(d => {\n          actions.configureAppState();\n          actions.changeLoginState();\n        })\n        console.log(appstate,\"Asdasd\");\n      });\n  }, []); */\n  const handleSubmit = () => {\n    actions.getUserData(value);\n    console.log(\"Error: \" + error);\n    if (error) {\n      setErrorValue(\"Please Enter Value\");\n      isError(error);\n    }\n  };\n\n  const handleChange = e => {\n    isError(false);\n    setValue(e.target.value);\n  };\n\n  const startQuiz = () => {\n    firebase\n      .database()\n      .ref(\"appState\")\n      .orderByChild(\"state\")\n      .once(\"value\", snapshot => {\n        snapshot.forEach(function (data) {\n          data.ref.child(\"questionStatus\").set(true);\n          data.ref.child(\"timestamp\").set(new Date().toISOString());\n        });\n      });\n    actions.startQuiz();\n    \n  };\n  return (\n    <div className=\"input_container\" align=\"center\">\n      {!loginSuccess && !isLoggedIn && (\n        <>\n          <RedditTextField\n            label=\"Enter your key\"\n            defaultValue={value}\n            onChange={e => handleChange(e)}\n            variant=\"filled\"\n            id=\"reddit-input\"\n          />\n          <Button\n            onClick={handleSubmit}\n            variant=\"contained\"\n            color=\"primary\"\n            className=\"submitButton\"\n            disabled={!value}\n          >\n            submit\n          </Button>\n        </>\n      )}\n      {loginSuccess && !isLoggedIn && user.role === \"user\" && (\n        <>\n          <p className=\"quiz_start_text\">\n            <p>\n              Hello{\" \"}\n              <span style={{ fontWeight: \"bold\", color: \"#194171\" }}>\n                {user.name}!{\" \"}\n              </span>\n              Welcome to the Nawait Mastermind\n            </p>\n\n            <p className=\"quiz_start_text_ins\" align=\"left\">\n              Instructions\n            </p>\n            <ol className=\"quiz_start_text_ol\" align=\"left\">\n              <li>Each category has 10 questions</li>\n              <li>\n                Time of each question of General Knowledege, Islamic and Nawait\n                categories is 20 seconds.\n              </li>\n              <li>Time of each question of IQ is 30 seconds.</li>\n              <li>Participant can only answer one question at a time.</li>\n              <li>Participant can not answer after the timer has finished.</li>\n              <li>\n                Top 15 participants result will be shown after compeletion of\n                each category.\n              </li>\n              <li>\n                Result will be based on two factors. Total Number of true\n                answers and total time\n              </li>\n              <li>\n                If more than 1 participant has same number of true answers, then\n                result will calculate on total time i.e. the one who answered\n                question in less amount of time.\n              </li>\n              <li>\n                Top 50 participants will be shown in the final result after quiz\n                will end.\n              </li>\n              <li>\n                For privacy, we changed the names of females by their husbands\n                or fathers reference. eg: Umme, Mrs etc.. in the result section\n              </li>\n            </ol>\n\n            <p align=\"center\" style={{ fontWeight: \"bold\", fontSize: \"25px\" }}>\n              Best of luck!\n            </p>\n          </p>\n        </>\n      )}\n      {loginSuccess && !isLoggedIn && user.role === \"admin\" && (\n        <>\n          <Button\n            onClick={startQuiz}\n            variant=\"contained\"\n            color=\"primary\"\n            className=\"submitButton\"\n          >\n            Start Quiz\n          </Button>\n        </>\n      )}\n\n      {errors && <p style={{ color: \"red\" }}>{errorMessage}</p>}\n    </div>\n  );\n};\n\nconst mapStateToProps = props => ({\n  loginSuccess: props.userReducer.loginSuccess,\n  isLoggedIn: props.userReducer.isLoggedIn,\n  user: props.userReducer.user,\n  error: props.userReducer.error,\n  errorMessage: props.userReducer.errorMessage\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(Actions, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomizedInputs);\n","/home/sadiq/Desktop/QuizApplication/src/components/result/index.js",["99"],"import React, { useEffect, useState } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport firebase from \"firebase\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./index.css\";\n\nconst Result = props => {\n  const [data, setData] = useState([]);\n\n  let datas = [];\n\n  useEffect(() => {\n    firebase\n      .database()\n      .ref(\"userResults\")\n      .orderByChild(\"totalCorrectAnswers\")\n      .once(\"value\", snapshot => {\n        snapshot.forEach(function(data) {\n          datas.push(data.val());\n        });\n        datas.sort(\n          (a, b) =>\n            b.totalCorrectAnswers - a.totalCorrectAnswers || a.score - b.score\n        );\n\n        setData(datas);\n        props.result(datas);\n      });\n  }, [props.appState]);\n\n  const showResultDb = () => {\n    firebase\n      .database()\n      .ref(\"appState\")\n      .orderByChild(\"showResult\")\n      .once(\"value\", snapshot => {\n        snapshot.forEach(function(data) {\n          data.ref.child(\"showResult\").set(!props.appState.showResult);\n        });\n      });\n  };\n\n  console.log(JSON.stringify(data));\n  const showResultData = (result, index) => {\n    return (\n      <>\n        <TableRow key={result.id}>\n        {props.limit === 50 && (\n          <TableCell>\n            <b className=\"color\">{index + 1}</b>\n          </TableCell>\n        )}\n          <TableCell className=\"color\" component=\"th\" scope=\"row\">\n            <p className=\"color\">{result.name}</p>\n          </TableCell>\n          <TableCell className=\"color\" align=\"right\">\n            <p className=\"color\">{result.totalCorrectAnswers}</p>\n          </TableCell>\n          <TableCell className=\"color\" align=\"right\">\n            <p className=\"color\">{result.score}</p>\n          </TableCell>\n        </TableRow>\n      </>\n    );\n  };\n  return (\n    <div>\n      <span\n        style={{\n          fontFamily: \"arial, sans-serif\",\n          fontSize: \"20px\",\n          margin: \"20%\"\n        }}\n      >\n        Results\n      </span>\n      {props.appState.showResult && (\n        <TableContainer className=\"container\">\n          <Table>\n            <TableHead>\n              <TableRow>\n                {props.limit === 50 && (\n                  <TableCell>\n                    <b className=\"color\">Id</b>\n                  </TableCell>\n                )}\n\n                <TableCell>\n                  <b className=\"color\">Name</b>\n                </TableCell>\n                <TableCell align=\"right\">\n                  <b className=\"color\">Correct Answers</b>\n                </TableCell>\n                <TableCell align=\"right\">\n                  <b className=\"color\">Score</b>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {data.map((result, i) => {\n                return showResultData(result, i);\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n      <br />\n      {props.isAdmin ? (\n         <Button\n         onClick={showResultDb}\n         className=\"result_btn\"\n         variant=\"contained\"\n       >\n         {!props.appState.showResult ? \"Show result\" : \"Hide result\"}\n       </Button>\n      /*   <button\n          onClick={showResultDb}\n          style={{ marginTop: \"10%\" }}\n          color=\"white\"\n        >\n          {!props.appState.showResult ? \"Show result\" : \"Hide result\"}\n        </button> */\n      ) : (\n        !props.appState.showResult && (\n          <p style={{ marginTop: 10, fontSize: 12 }}>\n            Top 15 Results will be shown after each category\n          </p>\n        )\n      )}\n    </div>\n  );\n};\nexport default Result;\n","/home/sadiq/Desktop/QuizApplication/src/constants/dummyData.js",[],"/home/sadiq/Desktop/QuizApplication/src/components/countdownwrapper/index.js",["100","101"],"import React from \"react\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\n\nconst CountDownWrapper = props => {\n  let seconds = 20;\n  let counter = 100;\n\n  console.log(props.duration, \"hamza: timer -> \" + props.timer);\n  return (\n    <div>\n      <CountdownCircleTimer\n        onComplete={props.onComplete}\n        children={props.children}\n        key={props.timer}\n        isPlaying\n        duration={props.duration}\n        size={100}\n        strokeWidth={4}\n        trailColor=\"#fff\"\n        colors=\"#000000\"\n      />\n    </div>\n  );\n};\nexport default CountDownWrapper;\n",["102","103"],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":32,"column":32,"nodeType":"110","messageId":"111","endLine":32,"endColumn":34},{"ruleId":"112","severity":1,"message":"113","line":23,"column":6,"nodeType":"114","endLine":23,"endColumn":8,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":1,"column":27,"nodeType":"118","messageId":"119","endLine":1,"endColumn":36},{"ruleId":"116","severity":1,"message":"120","line":5,"column":8,"nodeType":"118","messageId":"119","endLine":5,"endColumn":16},{"ruleId":"121","severity":1,"message":"122","line":12,"column":24,"nodeType":"123","messageId":"124","endLine":12,"endColumn":26},{"ruleId":"108","severity":1,"message":"109","line":13,"column":16,"nodeType":"110","messageId":"111","endLine":13,"endColumn":18},{"ruleId":"116","severity":1,"message":"117","line":1,"column":27,"nodeType":"118","messageId":"119","endLine":1,"endColumn":36},{"ruleId":"116","severity":1,"message":"125","line":8,"column":10,"nodeType":"118","messageId":"119","endLine":8,"endColumn":28},{"ruleId":"112","severity":1,"message":"126","line":82,"column":6,"nodeType":"114","endLine":82,"endColumn":25,"suggestions":"127"},{"ruleId":"112","severity":1,"message":"128","line":98,"column":6,"nodeType":"114","endLine":98,"endColumn":16,"suggestions":"129"},{"ruleId":"108","severity":1,"message":"109","line":102,"column":15,"nodeType":"110","messageId":"111","endLine":102,"endColumn":17},{"ruleId":"108","severity":1,"message":"109","line":186,"column":22,"nodeType":"110","messageId":"111","endLine":186,"endColumn":24},{"ruleId":"108","severity":1,"message":"109","line":190,"column":41,"nodeType":"110","messageId":"111","endLine":190,"endColumn":43},{"ruleId":"108","severity":1,"message":"109","line":207,"column":27,"nodeType":"110","messageId":"111","endLine":207,"endColumn":29},{"ruleId":"116","severity":1,"message":"130","line":47,"column":10,"nodeType":"118","messageId":"119","endLine":47,"endColumn":20},{"ruleId":"116","severity":1,"message":"131","line":49,"column":10,"nodeType":"118","messageId":"119","endLine":49,"endColumn":14},{"ruleId":"116","severity":1,"message":"132","line":49,"column":16,"nodeType":"118","messageId":"119","endLine":49,"endColumn":23},{"ruleId":"112","severity":1,"message":"133","line":55,"column":6,"nodeType":"114","endLine":55,"endColumn":12,"suggestions":"134"},{"ruleId":"112","severity":1,"message":"135","line":34,"column":6,"nodeType":"114","endLine":34,"endColumn":22,"suggestions":"136"},{"ruleId":"116","severity":1,"message":"137","line":5,"column":7,"nodeType":"118","messageId":"119","endLine":5,"endColumn":14},{"ruleId":"116","severity":1,"message":"138","line":6,"column":7,"nodeType":"118","messageId":"119","endLine":6,"endColumn":14},{"ruleId":"104","replacedBy":"139"},{"ruleId":"106","replacedBy":"140"},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'actions'. Either include it or remove the dependency array.","ArrayExpression",["143"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Register' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'bindActionCreators' is defined but never used.","React Hook useEffect has a missing dependency: 'questionNumber'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDuration' needs the current value of 'questionNumber'.",["144"],"React Hook useEffect has missing dependencies: 'questionAskedTime' and 'questionStatus'. Either include them or remove the dependency array.",["145"],"'errorValue' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'actions' and 'loginSuccess'. Either include them or remove the dependency array.",["146"],"React Hook useEffect has missing dependencies: 'datas' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["147"],"'seconds' is assigned a value but never used.","'counter' is assigned a value but never used.",["141"],["142"],"no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},"Update the dependencies array to be: [actions]",{"range":"158","text":"159"},"Update the dependencies array to be: [questionAskedTime, questionNumber]",{"range":"160","text":"161"},"Update the dependencies array to be: [appState, questionAskedTime, questionStatus]",{"range":"162","text":"163"},"Update the dependencies array to be: [actions, loginSuccess, user]",{"range":"164","text":"165"},"Update the dependencies array to be: [datas, props, props.appState]",{"range":"166","text":"167"},[791,793],"[actions]",[2342,2361],"[questionAskedTime, questionNumber]",[2822,2832],"[appState, questionAskedTime, questionStatus]",[1518,1524],"[actions, loginSuccess, user]",[1001,1017],"[datas, props, props.appState]"]